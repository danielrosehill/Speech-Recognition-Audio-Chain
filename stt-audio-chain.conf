# PipeWire Filter Chain Configuration for Speech-to-Text
# Optimized for: Samson Q2U and similar dynamic microphones
# Based on analysis of voice-samples/raw-q2u.wav (131 seconds)
#
# Processing chain: HPF → Gate → Dereverb → AGC → De-ess → Noise Suppressor → Limiter
# Tuned for: Lightweight processing, preserving natural voice characteristics
# SNR: 42 dB | Speech variation: 2.04 dB std | Sibilance: 2.6%

context.modules = [
    {   name = libpipewire-module-filter-chain
        args = {
            node.description = "STT Microphone Audio Chain"
            media.name       = "STT Microphone Audio Chain"
            filter.graph = {
                nodes = [
                    # 1. High-pass filter to remove rumble and low-frequency noise
                    {
                        type   = builtin
                        name   = hpf
                        label  = highpass
                        control = {
                            "Freq" = 80.0    # Remove frequencies below 80 Hz
                            "Q"    = 0.707   # Butterworth response
                        }
                    }

                    # 2. Noise gate to suppress background noise during silence
                    # Tuned for SNR 42 dB with periodic disturbances
                    {
                        type   = ladspa
                        name   = gate
                        plugin = "gate_1410"
                        label  = gate
                        control = {
                            "Threshold (dB)"      = -45.0  # Moderate gate for background noise
                            "Attack (ms)"         = 5.0    # Fast attack to catch speech onset
                            "Hold (ms)"           = 150.0  # Longer hold to avoid chopping
                            "Decay (ms)"          = 150.0  # Smooth release
                            "Range (dB)"          = -30.0  # Attenuation during gate
                        }
                    }

                    # 3. De-reverb using simple low-pass on stereo difference
                    # (Reduces room reflections by attenuating spatial information)
                    {
                        type   = builtin
                        name   = dereverb_lpf
                        label  = lowpass
                        control = {
                            "Freq" = 8000.0   # Roll off above 8kHz for dereverb
                            "Q"    = 0.707
                        }
                    }

                    # 4. Compressor for AGC (Automatic Gain Control)
                    # Gentle compression - speaker has excellent natural consistency (2.04 dB std)
                    {
                        type   = ladspa
                        name   = compressor
                        plugin = "sc4_1882"
                        label  = compressor
                        control = {
                            "RMS/peak"           = 0.0     # RMS detection for smooth response
                            "Attack time (ms)"   = 10.0    # Fast attack
                            "Release time (ms)"  = 150.0   # Moderate release
                            "Threshold level (dB)" = -22.0 # Just above avg speech (-22.65 dB)
                            "Ratio (1:n)"        = 3.5     # Gentle 3.5:1 compression
                            "Knee radius (dB)"   = 6.0     # Soft knee for smooth transition
                            "Makeup gain (dB)"   = 5.0     # Conservative makeup gain
                        }
                    }

                    # 5. De-esser to tame sibilance (s/sh sounds)
                    # Very gentle - only 2.6% sibilance energy detected at 4.2 kHz
                    {
                        type   = ladspa
                        name   = deesser
                        plugin = "sc4_1882"
                        label  = deesser
                        control = {
                            "RMS/peak"           = 1.0     # Peak detection for sibilants
                            "Attack time (ms)"   = 2.0     # Very fast attack
                            "Release time (ms)"  = 50.0    # Fast release
                            "Threshold level (dB)" = -18.0 # Higher threshold for gentle action
                            "Ratio (1:n)"        = 2.5     # Very gentle 2.5:1 ratio
                            "Knee radius (dB)"   = 4.0     # Soft knee to avoid harshness
                            "Makeup gain (dB)"   = 0.0     # No makeup gain needed
                        }
                    }

                    # 6. Adaptive noise suppressor (RNNoise-style)
                    {
                        type   = ladspa
                        name   = noise_suppressor
                        plugin = "noise_suppressor_mono"
                        label  = noise_suppressor
                        control = {
                            "VAD Threshold (%)" = 85.0  # Voice activity detection
                            "VAD Grace Period (ms)" = 200.0
                            "Retroactive VAD Grace (ms)" = 0.0
                        }
                    }

                    # 7. Final gentle limiter to prevent clipping
                    {
                        type   = builtin
                        name   = limiter
                        label  = limiter
                        control = {
                            "Limit"   = 0.95    # Prevent clipping at 95%
                            "Release" = 100.0   # Fast release
                        }
                    }
                ]
                links = [
                    { output = "hpf:Out" input = "gate:Input" }
                    { output = "gate:Output" input = "dereverb_lpf:In" }
                    { output = "dereverb_lpf:Out" input = "compressor:Input" }
                    { output = "compressor:Output" input = "deesser:Input" }
                    { output = "deesser:Output" input = "noise_suppressor:Input" }
                    { output = "noise_suppressor:Output" input = "limiter:In" }
                ]
            }
            capture.props = {
                node.name      = "stt_audio_chain_capture"
                media.class    = Audio/Source
                audio.position = [ FL FR ]
            }
            playback.props = {
                node.name      = "stt_audio_chain_playback"
                media.class    = Audio/Sink
                audio.position = [ FL FR ]
                node.passive   = true
            }
        }
    }
]
